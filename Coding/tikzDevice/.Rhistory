phi = 1
sig = 0.5
rho = -0.5
data = Generator(n,beta,xi,gamma,phi,sig,rho)
optim(c(-0.5,1,0.1,1,0.5),Calculator)
Calculator(-0.5,1,0.1,1,0.5)
Calculator <- function(theta){
beta = theta[1]
xi = theta[2]
gamma = theta[3]
phi = theta[4]
sig = theta[5]
require(plyr)
require(mvtnorm)
n = nrow(data)
a = count(data)
b = count(data,c("X","Z"))
for(j in 1:16){
y = data$Y[j]
d = data$D[j]
x = data$X[j]
z = data$Z[j]
a$p[j] = y*d*(pmvnorm(lower=c(gamma*x+phi*z,beta*x+xi*d),upper=c(Inf,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
y*(1-d)*(pmvnorm(lower=c(-Inf,beta*x+xi*d),upper=c(gamma*x+phi*z,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*d*(pmvnorm(lower=c(gamma*x+phi*z,-Inf),upper=c(Inf,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*(1-d)*(pmvnorm(lower=c(-Inf,-Inf),upper=c(gamma*x+phi*z,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2)))
a$o[j] = b[b$X == a$X[j] & b$Z == a$Z[j],"freq"]/n
a$u[j] = a$p[j]*a$o[j]
a$u[j] = log(a$u[j])
a$out[j] = a$freq[j]*a$u[j]
}
find = sum(a$out)
return(-find)
}
Generator <- function(n,beta,xi,gamma,phi,sig,rho){
a = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,rho,rho,1),nrow = 2,ncol = 2))
a = ifelse(a > 0,1,0)
b = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,sig,sig,1),nrow = 2,ncol = 2))
data = data.frame(X = a[,1],Z = a[,2],U = b[,1],V = b[,2])
data$D = ifelse(data$X*gamma+data$Z*phi < data$V,1,0)
data$Y = ifelse(data$X*beta+data$D*gamma < data$U,1,0)
data = data[,c(1,2,5,6)]
return(data)
}
n = 100000
beta = -0.5
xi = 1
gamma = 0.1
phi = 1
sig = 0.5
rho = -0.5
data = Generator(n,beta,xi,gamma,phi,sig,rho)
optim(c(-0.5,1,0.1,1,0.5),Calculator)
Calculator <- function(theta){
beta = theta[1]
xi = theta[2]
gamma = theta[3]
phi = theta[4]
sig = theta[5]
require(plyr)
require(mvtnorm)
n = nrow(data)
a = count(data)
b = count(data,c("X","Z"))
for(j in 1:16){
y = data$Y[j]
d = data$D[j]
x = data$X[j]
z = data$Z[j]
a$p[j] = y*d*(pmvnorm(lower=c(gamma*x+phi*z,beta*x+xi*d),upper=c(Inf,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
y*(1-d)*(pmvnorm(lower=c(-Inf,beta*x+xi*d),upper=c(gamma*x+phi*z,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*d*(pmvnorm(lower=c(gamma*x+phi*z,-Inf),upper=c(Inf,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*(1-d)*(pmvnorm(lower=c(-Inf,-Inf),upper=c(gamma*x+phi*z,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2)))
a$o[j] = b[b$X == a$X[j] & b$Z == a$Z[j],"freq"]/n
a$u[j] = a$p[j]*a$o[j]
a$u[j] = log(a$u[j])
a$out[j] = a$freq[j]*a$u[j]
}
find = sum(a$out)
return(-find)
}
Calculator(c(beta,xi,gamma,phi,sig))
optim(c(beta,xi,gamma,phi,sig),Calculator)
Calculator <- function(theta){
beta = theta[1]
xi = theta[2]
gamma = theta[3]
phi = theta[4]
sig = theta[5]
require(plyr)
require(mvtnorm)
n = nrow(data)
a = count(data)
b = count(data,c("X","Z"))
for(j in 1:16){
y = data$Y[j]
d = data$D[j]
x = data$X[j]
z = data$Z[j]
a$p[j] = y*d*(pmvnorm(lower=c(gamma*x+phi*z,beta*x+xi*d),upper=c(Inf,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
y*(1-d)*(pmvnorm(lower=c(-Inf,beta*x+xi*d),upper=c(gamma*x+phi*z,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*d*(pmvnorm(lower=c(gamma*x+phi*z,-Inf),upper=c(Inf,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*(1-d)*(pmvnorm(lower=c(-Inf,-Inf),upper=c(gamma*x+phi*z,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2)))
a$o[j] = b[b$X == a$X[j] & b$Z == a$Z[j],"freq"]/n
a$u[j] = a$p[j]*a$o[j]
a$u[j] = log(a$u[j])
a$out[j] = a$freq[j]*a$u[j]
}
find = sum(a$out)
return(-find)
}
Generator <- function(n,beta,xi,gamma,phi,sig,rho){
a = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,rho,rho,1),nrow = 2,ncol = 2))
a = ifelse(a > 0,1,0)
b = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,sig,sig,1),nrow = 2,ncol = 2))
data = data.frame(X = a[,1],Z = a[,2],U = b[,1],V = b[,2])
data$D = ifelse(data$X*gamma+data$Z*phi < data$V,1,0)
data$Y = ifelse(data$X*beta+data$D*gamma < data$U,1,0)
data = data[,c(1,2,5,6)]
return(data)
}
n = 100000
beta = -0.5
xi = 1
gamma = 0.1
phi = 1
sig = 0.5
rho = -0.5
data = Generator(n,beta,xi,gamma,phi,sig,rho)
Calculator(c(beta,xi,gamma,phi,sig))
optim(c(beta,xi,gamma,phi,sig),Calculator)
Calculator <- function(theta){
beta = theta[1]
xi = theta[2]
gamma = theta[3]
phi = theta[4]
sig = theta[5]
require(plyr)
require(mvtnorm)
n = nrow(data)
a = count(data)
b = count(data,c("X","Z"))
for(j in 1:16){
y = data$Y[j]
d = data$D[j]
x = data$X[j]
z = data$Z[j]
a$p[j] = y*d*(pmvnorm(lower=c(gamma*x+phi*z,beta*x+xi*d),upper=c(Inf,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
y*(1-d)*(pmvnorm(lower=c(-Inf,beta*x+xi*d),upper=c(gamma*x+phi*z,Inf),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*d*(pmvnorm(lower=c(gamma*x+phi*z,-Inf),upper=c(Inf,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2))) +
(1-y)*(1-d)*(pmvnorm(lower=c(-Inf,-Inf),upper=c(gamma*x+phi*z,beta*x+xi*d),sigma=matrix(c(1,sig,sig,1),nrow=2,ncol=2)))
a$o[j] = b[b$X == a$X[j] & b$Z == a$Z[j],"freq"]/n
a$u[j] = a$p[j]*a$o[j]
a$u[j] = log(a$u[j])
a$out[j] = a$freq[j]*a$u[j]
}
find = sum(a$out)
return(-find)
}
Generator <- function(n,beta,xi,gamma,phi,sig,rho){
a = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,rho,rho,1),nrow = 2,ncol = 2))
a = ifelse(a > 0,1,0)
b = rmvnorm(n,mean = c(0,0),sigma=matrix(c(1,sig,sig,1),nrow = 2,ncol = 2))
data = data.frame(X = a[,1],Z = a[,2],U = b[,1],V = b[,2])
data$D = ifelse(data$X*gamma+data$Z*phi < data$V,1,0)
data$Y = ifelse(data$X*beta+data$D*gamma < data$U,1,0)
data = data[,c(1,2,5,6)]
return(data)
}
n = 10000
beta = -0.5
xi = 1
gamma = 0.1
phi = 1
sig = 0.5
rho = -0.5
data = Generator(n,beta,xi,gamma,phi,sig,rho)
Calculator(c(beta,xi,gamma,phi,sig))
optim(c(beta,xi,gamma,phi,sig),Calculator)
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.6,0.6,0.05)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Both male",
"Both female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
load("~/GitHub/Covariatesets/Coding/tikzDevice/Data for instrument graphs.RData")
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.6,0.6,0.05)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Both male",
"Both female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
BCE
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.6,0.6,0.2)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Both male",
"Both female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.6,0.6,0.2)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Male-Male",
"Female-Female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.6,0.5,0.2)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Male-Male",
"Female-Female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
BCE
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.539,0.425,0.2)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Male-Male",
"Female-Female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans2.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp<6,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.550,0.450,0.2)) +
scale_y_discrete(limits=c(1,2,3,4,5), labels = c("Same gender",
"Male-Male",
"Female-Female",
"Male-Male and \n Female-Female",
"All permutations")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
rm(list=ls())
load("~/GitHub/Covariatesets/Coding/ACEdata.RData")
ACE
rm(list=ls())
load("~/GitHub/Covariatesets/Coding/tikzDevice/Data for instrument graphs.RData")
rm(list=ls())
Source <- url("http://www.ucl.ac.uk/~zctpep9/Data%20archive/AE98Data.RData")
DF <- load(Source)
PUMS80M <- D
rm(list = c("Source","DF","D"))
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("M","F"),
party = c("Democrat","Independent", "Republican"))
M
(Xsq <- chisq.test(M))
Xsq$observed
Xsq$expected
sum(762 ,        327    ,    468)
sum(484,         239 ,       477)
762+484
1246/(1557+1200)
1246*1557/(1557+1200)
head(PUMS80M)
count(PUMS80M,c("hispm","multi2nd"))
T <- as.table(rbind(c(233776,18760),c(1981,137)))
dimnames(T) <- list(multi2nd = c("No","Yes"),hispm = c("No","Yes"))
(Xsq <- chisq.test(T))
T
Xsq$observed
Xsq$expected
Xsq$residuals
Xsq$stdres
count(PUMS80M,c("boy1st","boy2nd","hispm"))
S <- as.table(rbind(c(56351,58114,58445,62847),c(4595, 4610,4740,4952)))
dimnames(S) <- list(hispm = c("No","Yes"),gender = c("ff","fm","mf","mm"))
(Xsq <- chisq.test(S))
