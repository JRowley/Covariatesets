axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence \n region","Estimate \n")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"="blue","Confidence"="red")
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"="violet","Confidence"="capri")
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"=rgb(0.56,0,1),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
library("dichromat", lib.loc="~/R/win-library/3.1")
remove.packages("dichromat")
install.packages("dichromat")
library("dichromat", lib.loc="~/R/win-library/3.1")
dichromat(rgb(0,0.75,1))
rgb(0,0.75,1)
dichromat(rgb(0,0.75,1),type="deutan")
dichromat(rgb(0,0.75,1),type="protan")
dichromat(rgb(0,0.75,1),type="tritan")
dichromat(rgb(0.56,0,1),type="deutan")
dichromat(rgb(0.56,0,1),type="protan")
dichromat(rgb(0.56,0,1),type="tritan")
rgb(0.56,0,1)
par(mfrow = c(2, 4))
?image
par(mfrow = c(2, 4))
x <- matrix(rnorm(10 * 10), 10)
image(1:10, 1:10, x, col = bluescale(10), main = "blue-yellow scale")
purple.scale <- colorRampPalette(c("#00BFFF", "#A4A4FE", "#B5B5FE",
"#44C6C6"))
par(mfrow = c(2, 4))
x <- matrix(rnorm(10 * 10), 10)
image(1:10, 1:10, x, col = purple.scale(10), main = "blue-yellow scale")
par(mfrow = c(2, 4))
x <- matrix(rnorm(10 * 10), 10)
a<-image(1:10, 1:10, x, col = purple.scale(10), main = "blue-yellow scale")
a
viewer(a)
view(a)
## color ramp schemes
bluescale <- colorRampPalette(c("#FFFFCC", "#C7E9B4", "#7FCDBB",
"#40B6C4", "#2C7FB8" , "#253494"))
redgreen <- colorRampPalette(c("red", "green3"))
pie(rep(1,15), col = bluescale(15))
pie(rep(1,15), col = dichromat(bluescale(15)))
par(mfrow = c(2, 4))
x <- matrix(rnorm(10 * 10), 10)
image(1:10, 1:10, x, col = bluescale(10), main = "blue-yellow scale")
image(1:10, 1:10, x, col = dichromat(bluescale(10), "deutan"), main = "deutan")
image(1:10, 1:10, x, col = dichromat(bluescale(10), "protan"), main = "protan")
image(1:10, 1:10, x, col = dichromat(bluescale(10), "tritan"), main = "tritan")
image(1:10, 1:10, x, col = redgreen(10), main = "red-green scale")
image(1:10, 1:10, x, col = dichromat(redgreen(10), "deutan"), main = "deutan")
image(1:10, 1:10, x, col = dichromat(redgreen(10), "protan"), main = "protan")
image(1:10, 1:10, x, col = dichromat(redgreen(10), "tritan"), main = "tritan")
purple.scale
purple.scale <- (c("#00BFFF", "#A4A4FE", "#B5B5FE",
"#44C6C6"))
capri.scale<-(c("#8F00FF","#5858FC","#3737FF","#7E7F7F"))
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
pal(purple.scale)
plot(pal(purple.scale))
library("colorspace", lib.loc="~/R/win-library/3.1")
x = RGB(runif(1000),runif(1000),runif(1000))
plot(as(x, "LUV"))
x = c(purple.scale,capri.scale)
x = c(purple.scale,capri.scale)
x = RGB(runif(1000),runif(1000),runif(1000))
plot(as(x, "LUV"))
# Function for plotting colors side-by-side
pal <- function(col, border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
col = c("#00BFFF","#8F00FF","#A4A4FE","#5858FC","#B5B5FE","#3737FF","#44C6C6","#7E7F7F")
pal(col)
pal(col[1:2])
pal(col[3:4])
pal(col[5:6])
pal(col[7:8])
library("dichromat", lib.loc="~/R/win-library/3.1")
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
p1<-pal(col[1:2])
p2<-pal(col[3:4])
p3<-pal(col[5:6])
p4<-pal(col[7:8])
multiplot(p1, p2, p3, p4, cols=2)
p1
p1<-pal(col[1:2])
p2<-pal(col[3:4])
p3<-pal(col[5:6])
p4<-pal(col[7:8])
par(mfrow=c(2,2))
p1<-pal(col[1:2])
p2<-pal(col[3:4])
p3<-pal(col[5:6])
p4<-pal(col[7:8])
# Function for plotting colors side-by-side
pal <- function(col,name, border = "light gray", ...){
n <- length(col)
plot(0, 0, main="name",type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
p1<-pal(col[1:2],"Normal scheme")
# Function for plotting colors side-by-side
pal <- function(col,name, border = "light gray", ...){
n <- length(col)
plot(0, 0, main=name,type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
p1<-pal(col[1:2],"Normal scheme")
p2<-pal(col[3:4],"Deuteranopia scheme")
p3<-pal(col[5:6],"Protanopia scheme")
p4<-pal(col[7:8],"Tritanopia scheme")
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"=rgb(0.56,0,1),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
load("~/GitHub/Covariatesets/Coding/tikzDevice/Data for instrument graphs.RData")
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"=rgb(0.56,0,1),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"=rgb(0.56,0,1),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
rgb(128,0,128)
RGB(128,0,128)
library("colorspace", lib.loc="~/R/win-library/3.1")
RGB(128,0,128)
hex(c(128,0,128))
hex(RGB(128,0,128))
a<-RGB(128,0,128)
a
hex(a)
rgb(800080)
rgb(#800080)
rgb(#800080))
()
rgb("#800080")
rgb(0,1,0)
rgb(128,0,128,maxColorValue=255)
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
cols <- c("Estimate"=rgb(128,0,128,maxColorValue=255),"Confidence"=rgb(0,0.75,1))
BCE <- ACE[ACE$Exp>5,]
BCE <- data.frame(Exp = ordered(BCE$Exp),BCE[,2:5])
p <- ggplot(BCE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.text = element_text(size = 12),
title = element_text(size = 14)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
#   theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=4)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Confidence")) +
geom_rect(aes(xmin=lower,xmax=upper,ymin=as.numeric(Exp)-0.4,ymax=as.numeric(Exp)+0.4,fill="Estimate")) +
scale_fill_manual(name="",values=cols,labels=c("Confidence","Estimate")) +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = seq(-0.3,0,0.05)) +
scale_y_discrete(limits=c(1,2,3), labels = c("Multiple \n second \n birth",
"Multiple \n second \n birth and \n same gender",
"Multiple \n second \n birth and \n child gender")) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Definition of instrumental variable") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
rgb(128,0,128,maxColorValue=255)
col
col[1]<- rgb(128,0,128,maxColorValue=255)
col
col[3]<-dichromat(col[1],type="deutan")
col[5]<-dichromat(col[1],type="protan")
col[7]<-dichromat(col[1],type="tritan")
# Function for plotting colors side-by-side
pal <- function(col,border = "light gray", ...){
n <- length(col)
plot(0, 0, type="n", xlim = c(0, 1), ylim = c(0, 1),
axes = FALSE, xlab = "", ylab = "", ...)
rect(0:(n-1)/n, 0, 1:n/n, 1, col = col, border = border)
}
par(mfrow=c(2,2))
pal(col[1:2])
rgb(0,75,1)
rgb(0,0.75,1)
col[2]<-rgb(0,0.75,1)
col[4]<-dichromat(rgb(0,0.75,1),type="deutan")
col[6]<-dichromat(rgb(0,0.75,1),type="protan")
col[8]<-dichromat(rgb(0,0.75,1),type="tritan")
col
par(mfrow=c(2,2))
pal(col[1:2])
pal(col[3:4])
pal(col[5:6])
pal(col[7:8])
BCE
sum(Data$Z)
sum(Data$Z)/nrow(Data)
sum(Data$Z*Data$X)/nrow(Data)
sum(Data$Z*Data$X)/sum(Data$X)
sum(Data$Z*(1-Data$X))/sum(1-Data$X)
