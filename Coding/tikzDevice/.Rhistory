"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
theme(axis.title.y=element_text(hjust=0.1)) +
theme(axis.title.x=element_text(vjust=0.1))
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
theme(axis.title.y=element_text(vjust=0.35)) +
theme(axis.title.x=element_text(vjust=-0.35))
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=0.35)) +
theme(axis.title.x=element_text(vjust=-0.35)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=0.35)) +
theme(axis.title.x=element_text(vjust=-0.35)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=0.5)) +
theme(axis.title.x=element_text(vjust=-0.5)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=1)) +
theme(axis.title.x=element_text(vjust=-1)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=1)) +
theme(axis.title.x=element_text(vjust=-0.5)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=1)) +
theme(axis.title.x=element_text(vjust=-0.5)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=1)) +
theme(axis.title.x=element_text(vjust=-0.5)) +
theme(plot.title = element_text(vjust=0.5)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
require(ggplot2)
require(tikzDevice)
options(tikzMetricPackages = c("\\usepackage[utf8]{inputenc}",
"\\usepackage[T1]{fontenc}", "\\usetikzlibrary{calc}",
"\\usepackage{amssymb}"))
tikz('instrumentssans.tex')
p <- ggplot(ACE, aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4))
p + theme_bw() +
theme(text = element_text(family = "CM Sans"),
axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = 'black'),
panel.background = element_blank(),
axis.line = element_line(colour = 'black')) +
theme(legend.position="none") +
theme(axis.title.y=element_text(vjust=2)) +
theme(axis.title.x=element_text(vjust=-2)) +
theme(plot.title = element_text(vjust=2)) +
geom_rect(aes(xmin=cl,xmax=cu,ymin=Exp-0.4,ymax=Exp+0.4),fill="red") +
geom_rect(aes(xmin=lower,xmax=upper,ymin=Exp-0.4,ymax=Exp+0.4),fill="blue") +
#   geom_vline(xintercept = 0) +
scale_x_continuous(breaks = round(seq(min(ACE$lower), max(ACE$upper), by = 0.1),1)) +
scale_y_continuous(breaks = round(seq(min(ACE$Exp), max(ACE$Exp), by = 1),1)) +
xlab("$ACE_n(D\\rightarrow Y)$") +
ylab("Specification") +
labs(title="Enriching the support of an instrumental variable")
dev.off()
library("mvtnorm", lib.loc="~/R/win-library/3.1")
rm(list=ls())
n = 100000
A <- mvtnorm(n,mean=c(0,0),sigma=matrix(c(1,0.5,0.5,1),nrow=2,ncol=2))
n = 100000
A <- rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0.5,0.5,1),nrow=2,ncol=2))
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0.5,0.5,1),nrow=2,ncol=2)))
?sample
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>A$Z,1,0)
A$Y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
head(A)
?correlation
??correlation
cor(A$X,A$Z)
cor(A$D,A$Z)
cor(A$D,A$X)
cor(A$Y,A$X)
cor(A$Y,A$Z)
cor(A$Y,A$D)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>A$Z,1,0)
A$Y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
cor(A$X,A$Z)
cor(A$D,A$Z)
cor(A$D,A$X)
cor(A$Y,A$X)
cor(A$Y,A$D)
cor(A$Y,A$Z)
install.packages("systemfit")
library("systemfit", lib.loc="~/R/win-library/3.1")
library("sem", lib.loc="~/R/win-library/3.1")
detach("package:sem", unload=TRUE)
?uninstall
??uninstall
remove.packages(sem)
install.packages("sem")
library("sem", lib.loc="~/R/win-library/3.1")
install.packages("matrixcalc")
detach("package:sem", unload=TRUE)
library("sem", lib.loc="~/R/win-library/3.1")
tsls(Y~D+X,~X+Z,data=A)
tsls(Y~D,~Z,data=A)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>A$Z,1,0)
A$Y <- ifelse(A$U>0.5*A$D+1*A$X,1,0)
tsls(Y~D+X,~X+Z,data=A)
tsls(Y~D,~Z,data=A)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>A$Z,1,0)
A$Y <- ifelse(A$U>0.5*A$D+1.5*A$X,1,0)
tsls(Y~D+X,~X+Z,data=A)
tsls(Y~D,~Z,data=A)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>0.5*A$Z-0.5*A$X,1,0)
A$Y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
tsls(Y~D+X,~X+Z,data=A)
tsls(Y~D,~Z,data=A)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>0.5*A$Z+0.5*A$X,1,0)
A$Y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
tsls(Y~D,~Z,data=A)
tsls(Y~D+X,~X+Z,data=A)
n = 200000
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,0,0,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
A$X <- sample(c(0,1),n,replace=T)
A$Z <- sample(c(0,1),n,replace=T)
A$D <- ifelse(A$V>0.5*A$Z+1.5*A$X,1,0)
A$Y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
tsls(Y~D+X,~X+Z,data=A)
tsls(Y~D,~Z,data=A)
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
return(head(D))
}
Data(n,0,0,0)
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
D$X <- ifelse(D$X>0,1,0)
D$Z <- ifelse(D$Z>0,1,0)
return(head(D))
}
Data(n,0,0,0)
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
D$X <- ifelse(D$X>0,1,0)
D$Z <- ifelse(D$Z>0,1,0)
D$d <- ifelse(A$V>0.5*A$Z+aff*0.5*A$X,1,0)
D$y <- ifelse(A$U>0.5*A$D+0.5*A$X,1,0)
return(head(D))
}
Data(n,0,0,0)
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
D$X <- ifelse(D$X>0,1,0)
D$Z <- ifelse(D$Z>0,1,0)
D$d <- ifelse(D$V>0.5*D$Z+aff*0.5*D$X,1,0)
D$y <- ifelse(D$U>0.5*D$D+0.5*D$X,1,0)
return(head(D))
}
Data(n,0,0,0)
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
D$X <- ifelse(D$X>0,1,0)
D$Z <- ifelse(D$Z>0,1,0)
D$d <- ifelse(D$V>0.5*D$Z+aff*0.5*D$X,1,0)
D$y <- ifelse(D$U>0.5*D$d+0.5*D$X,1,0)
return(head(D))
}
Data(n,0,0,0)
n = 200000
Data <- function(n,end,cor,aff){
A <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,end,end,1),nrow=2,ncol=2)))
colnames(A) <- c("U","V")
B <- data.frame(rmvnorm(n,mean=c(0,0),sigma=matrix(c(1,cor,cor,1),nrow=2,ncol=2)))
colnames(B) <- c("X","Z")
D <- data.frame(A,B)
D$X <- ifelse(D$X>0,1,0)
D$Z <- ifelse(D$Z>0,1,0)
D$d <- ifelse(D$V>0.5*D$Z+aff*0.5*D$X,1,0)
D$y <- ifelse(D$U>0.5*D$d+0.5*D$X,1,0)
return(D)
}
#Spec1 - No endog, X does not affect D, zero corr X and Z
Frame <- Data(n,0,0,0)
tsls(Y~D+X,~X+Z,data=Frame)
tsls(Y~D,~Z,data=Frame)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
Frame <- Data(n,0.5,0,0)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
Frame <- Data(n,0.5,0,0)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
#Spec3 - No endog, X does affect D, zero corr X and Z
Frame <- Data(n,0,0,1)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
# Again - does not matter
#Spec3 - No endog, X does not affect D, corr X and Z
Frame <- Data(n,0,0.5,0)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
# Again - does not matter
#Spec3 - No endog, X does not affect D, corr X and Z
Frame <- Data(n,0,0.5,0)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
# Again - does not matter
#Spec5 - endog, X does affect D, zero corr X and Z
Frame <- Data(n,0.5,0,1)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
#Spec6 - endog, X does not affect D, corr X and Z
Frame <- Data(n,0.5,0.5,0)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
# Does not matter
#Spec7 - endog, X does affect D, corr X and Z
Frame <- Data(n,0.5,0.5,1)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
# Does matter
#Spec8 - no endog, X does affect D, corr X and Z
Frame <- Data(n,0,0.5,1)
tsls(y~d+X,~X+Z,data=Frame)
tsls(y~d,~Z,data=Frame)
